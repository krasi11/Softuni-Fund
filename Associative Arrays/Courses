using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;

namespace ClassAndObj
{
    class Program
    {
        private static string CheckForLegendary(Dictionary<string, int> materials)
        {
            var material = materials.FirstOrDefault(x => x.Value >= 250);
            materials[material.Key] -= 250;
            return material.Key;
        }

        static void Main(string[] args)
        {
            Dictionary<string, string> parking = new Dictionary<string, string>();

            int operationsCount = int.Parse(Console.ReadLine());
            for (int i = 0; i < operationsCount; i++)
            {
                string[] data = Console.ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries);
                string operation = data[0];
                string username = data[1];
                if (operation == "register")
                {
                    string plate = data[2];
                    if (parking.ContainsKey(username))
                    {
                        string plateNumber = parking.FirstOrDefault(x => x.Key == username).Value;
                        Console.WriteLine($"ERROR: already registered with plate number {plateNumber}");
                    }
                    else
                    {
                        parking.Add(username, plate);
                        Console.WriteLine($"{username} registered {plate} successfully");
                    }
                }
                else if (operation == "unregister")
                {
                    if (parking.ContainsKey(username))
                    {
                        parking.Remove(username);
                        Console.WriteLine($"{username} unregistered successfully");
                    }
                    else
                    {
                        string plateNumber = parking.FirstOrDefault(x => x.Key == username).Value;
                        Console.WriteLine($"ERROR: user {username} not found");
                    }
                }              
            }
            parking.ToList().ForEach(x => Console.WriteLine($"{x.Key} => {x.Value}"));
        }
    }
}
